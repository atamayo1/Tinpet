{"version":3,"sources":["../../src/pages/chat-box/chat-box.module.ts","../../src/pages/chat-box/chat-box.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChatBoxPage } from './chat-box';\n\n@NgModule({\n  declarations: [\n    ChatBoxPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ChatBoxPage),\n  ],\n})\nexport class ChatBoxPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat-box/chat-box.module.ts","/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a component of Chat Box\n * File path - '../../../../src/pages/chat-box/chat-box'\n */\n\nimport { Component, ViewChild } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ViewController, Content, Slides } from 'ionic-angular';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Chat } from '../../models/chat';\nimport { ChatProvider } from '../../providers/chat/chat';\nimport { GiphyProvider } from '../../providers/giphy/giphy';\n\n@IonicPage()\n@Component({\n  selector: 'page-chat-box',\n  templateUrl: 'chat-box.html',\n})\nexport class ChatBoxPage {\n\n  @ViewChild(Content) content: Content;\n  @ViewChild('mySlider') slider: Slides;\n\n  // Chat Form that handles sending of messages\n  chatForm: FormGroup;\n\n  // Array List of Chat History\n  chats: Array<Chat> = [];\n\n  // List of chat reply message\n  chatReplyMessages: any = this.chatProvider.randomChatReplyMsg();\n\n  // List of GIF\n  gifs: any = [];\n\n  // GIF Images Limit\n  limit: number = 25;\n\n  // Search GIF Image \n  searchText: string;\n\n  // Show/Hide GIF Slider Contents\n  showGif: Boolean = false;\n\n  constructor(public navCtrl: NavController,\n    public navParams: NavParams,\n    public viewCtrl: ViewController,\n    private chatProvider: ChatProvider,\n    private giphyProvider: GiphyProvider,\n    private formBuilder: FormBuilder) {\n\n  }\n\n  /** Do any initialization */\n  ngOnInit() {\n    this.setupChatForm();\n    this.getChatHistory();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Chat Form\n   * --------------------------------------------------------------\n   * @method    setupChatForm\n   */\n  setupChatForm() {\n    // Setup form\n    this.chatForm = this.formBuilder.group({\n      message: ['', Validators.required]\n    });\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get Chat History\n   * --------------------------------------------------------------\n   * @method    getChatHistory\n   */\n  getChatHistory() {\n    this.chatProvider.getChatHistoryData().subscribe((data) => {\n      this.chats = data;\n      this.scrollToBottom();\n    })\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Get Gifs\n   * --------------------------------------------------------------\n   * @method    getGifs\n   */\n  getGifs() {\n    this.giphyProvider.getTrendingGifs(this.limit).subscribe(\n      (data: any) => {\n        this.gifs.push(...data.data);\n        this.limit = this.limit + 5;\n        this.scrollToBottom();\n      }\n    )\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Search Gifs\n   * --------------------------------------------------------------\n   * @method    getGifs\n   */\n  searchGifs() {\n    this.giphyProvider.searchGif(this.searchText).subscribe(\n      (data: any) => {\n        this.gifs = data.data;\n        this.scrollToBottom();\n      }\n    )\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Input Box Focus\n   * --------------------------------------------------------------\n   * @method    onMessageInputFocus\n   */\n  onMessageInputFocus() {\n    setTimeout(() => this.scrollToBottom(), 100);\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Send Chat Message\n   * --------------------------------------------------------------\n   * @method    sendMsg\n   */\n  sendMsg() {\n    let message = this.chatForm.controls['message'].value;\n\n    if (message) {\n      this.chats.push({\n        senderName: \"Tom Cruise\",\n        receiverName: \"Alidia Parks\",\n        message: message,\n        status: \"sent\",\n        timestamp: new Date()\n      });\n\n      // Clear input field\n      this.chatForm.controls['message'].setValue('');\n\n      setTimeout(() => this.scrollToBottom(), 100);\n\n      // Reply back message\n      this.replyMessage();\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Send Gif Image Message\n   * --------------------------------------------------------------\n   * @method    sendGif\n   */\n  sendGif() {\n\n    // Selected Gif Image Index\n    let theClickedIndex = this.slider.clickedIndex;\n\n    // Selected Gif Image\n    let msgGifImg = this.gifs[theClickedIndex].images.preview_gif.url;\n\n    if (msgGifImg) {\n      this.chats.push({\n        senderName: \"Tom Cruise\",\n        receiverName: \"Alidia Parks\",\n        image: msgGifImg,\n        status: \"sent\",\n        timestamp: new Date()\n      });\n    }\n\n    setTimeout(() => this.scrollToBottom(), 100);\n\n    this.replyMessage();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Reply Back Chat Message\n   * --------------------------------------------------------------\n   * @method    replyMessage\n   */\n  replyMessage() {\n\n    let replyMes = this.chatReplyMessages[Math.floor(Math.random() * this.chatReplyMessages.length)];\n\n    // Simulate response after delay\n    setTimeout(() => {\n      this.chats.push({\n        senderName: \"Alidia Parks\",\n        receiverName: \"Tom Cruise\",\n        message: replyMes,\n        status: \"received\",\n        timestamp: new Date()\n      })\n      this.scrollToBottom();\n    }, 1000);\n  }\n\n\n  /**\n   * This function dismiss the popup modal\n   */\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Scroll To Bottom\n   * --------------------------------------------------------------\n   * @method    scrollToBottom\n   */\n  scrollToBottom() {\n    setTimeout(() => {\n      if (this.content.scrollToBottom) {\n        this.content.scrollToBottom();\n      }\n    }, 400)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat-box/chat-box.ts"],"sourceRoot":""}