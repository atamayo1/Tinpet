{"version":3,"sources":["../../src/pages/swipe/swipe.module.ts","../../src/pages/swipe/swipe.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SwingModule } from 'angular2-swing';\nimport { SwipePage } from './swipe';\n\n@NgModule({\n  declarations: [\n    SwipePage,\n  ],\n  imports: [\n    SwingModule,\n    IonicPageModule.forChild(SwipePage),\n  ],\n})\nexport class SwipePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/swipe/swipe.module.ts","\n/**\n * @author    Ionic Bucket <ionicbucket@gmail.com>\n * @copyright Copyright (c) 2017\n * @license   Fulcrumy\n * \n * This file represents a component of Swipe Page\n * File path - '../../../../src/pages/swipe/swipe'\n */\n\n\nimport { Component, ViewChild, ViewChildren, QueryList } from '@angular/core';\nimport { IonicPage, ModalController } from 'ionic-angular';\nimport { DataProvider } from '../../providers/data/data';\nimport { User } from '../../models/user';\nimport { Direction, StackConfig, SwingStackComponent, SwingCardComponent } from 'angular2-swing';\n\n@IonicPage()\n@Component({\n  selector: 'page-swipe',\n  templateUrl: 'swipe.html',\n})\nexport class SwipePage {\n\n  @ViewChild('myswing1') swingStack: SwingStackComponent;\n  @ViewChildren('mycards1') swingCards: QueryList<SwingCardComponent>;\n\n  // Array list of users\n  users: Array<User> = [];\n\n  // Swing Card Configuration\n  stackConfig: StackConfig;\n\n  // Recent Swipe User\n  swipeUser: any = '';\n\n  constructor(private dataProvider: DataProvider,\n    public modalCtrl: ModalController) { }\n\n  ngOnInit() {\n    this.cardConfig();\n    this.getUserList();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * List of users\n   * --------------------------------------------------------------\n   * @method    getUserList\n   */\n  getUserList() {\n    this.dataProvider.getUserList().subscribe(data => {\n      this.users = data;\n    })\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Set card stack configuration\n   * --------------------------------------------------------------\n   * @method    getUserList\n   * \n   * See https://github.com/ksachdeva/angular2-swing\n   * See https://github.com/gajus/swing\n   */\n  cardConfig() {\n    this.stackConfig = {\n      allowedDirections: [Direction.UP, Direction.DOWN, Direction.LEFT, Direction.RIGHT],\n      throwOutConfidence: (offsetX, offsetY, element) => {\n        return Math.min(Math.max(Math.abs(offsetX) / (element.offsetWidth / 2), Math.abs(offsetY) / (element.offsetHeight / 2)), 1);\n      },\n      transform: (element, x, y, r) => {\n        this.onItemMove(element, x, y, r);\n      },\n      throwOutDistance: (d) => {\n        return 800;\n      }\n    };\n  }\n\n  /**\n   * --------------------------------------------------------------\n   * Called whenever we drag an element\n   * --------------------------------------------------------------\n   * @method    onItemMove\n   */\n  onItemMove(element, x, y, r) {\n    var color = '';\n    var abs = Math.abs(x);\n    let min = Math.trunc(Math.min(16 * 16 - abs, 16 * 16));\n    element.style.background = color;\n    element.style['transform'] = `translate3d(0, 0, 0) translate(${x}px, ${y}px) rotate(${r}deg)`;\n  }\n\n  /**\n   * --------------------------------------------------------------\n   *  Like/Dislike\n   * --------------------------------------------------------------\n   * @method    like    This method remove user from card stack and boolean status value\n   * determine like/dislike decision.\n   * @param     status  \n   */\n  like(status: boolean) {\n\n    // Currently removed user from card\n    let removedUser = this.users.pop();\n\n    // If status is true, current user like this `removedUser` user otherwise dislike\n    if (status) {\n      this.swipeUser = removedUser;\n      this.goToMatchPage(this.swipeUser);\n    } else {\n      this.swipeUser = removedUser;\n    }\n  }\n\n  /**\n   * --------------------------------------------------------------\n   *  Go To Match Page\n   * --------------------------------------------------------------\n   * @method    goToMatchPage\n   */\n  goToMatchPage(user) {\n    this.modalCtrl.create('MatchPage', { user: user }).present();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   *  Open Profile Details Page\n   * --------------------------------------------------------------\n   * @method    goToProfileDetailsPage\n   */\n  goToUserDetailsPage(user) {\n    this.modalCtrl.create('UserDetailsPage', { user: user }).present();\n  }\n\n  /**\n   * --------------------------------------------------------------\n   *  Refresh Card\n   * --------------------------------------------------------------\n   * @method    refresh\n   */\n  refresh() {\n    this.getUserList();\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/swipe/swipe.ts"],"sourceRoot":""}